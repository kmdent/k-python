#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 891 0 26 3 16 #"#lang plai-typed"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 19 3 24 #"\"python-core-syntax.rkt\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 20 #"make-object-of-class"
0 0 22 3 1 #" "
0 0 14 3 8 #"class-id"
0 0 22 3 1 #" "
0 0 14 3 7 #"primval"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 7 #"CObject"
0 0 22 3 1 #" "
0 0 14 3 7 #"primval"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 19 3 11 #"\"__class__\""
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 14 3 8 #"class-id"
0 0 22 3 6 #"))))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 15 3 11 #"make-object"
0 0 22 3 2 #" ("
0 0 14 3 3 #"val"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 7 #"PrimVal"
0 0 22 3 3 #")) "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 7 #"PrimVal"
0 0 22 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"VNum"
0 0 22 3 2 #" ("
0 0 14 3 1 #"n"
0 0 22 3 3 #") ("
0 0 14 3 20 #"make-object-of-class"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"int"
0 0 22 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 5 #"VTrue"
0 0 22 3 5 #" () ("
0 0 14 3 20 #"make-object-of-class"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bool"
0 0 22 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 6 #"VFalse"
0 0 22 3 5 #" () ("
0 0 14 3 20 #"make-object-of-class"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bool"
0 0 22 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"VStr"
0 0 22 3 2 #" ("
0 0 14 3 1 #"s"
0 0 22 3 3 #") ("
0 0 14 3 20 #"make-object-of-class"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"str"
0 0 22 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 5 #"VNone"
0 0 22 3 5 #" () ("
0 0 14 3 20 #"make-object-of-class"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"NoneType"
0 0 22 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"to-object"
0 0 22 3 1 #" "
0 0 19 3 28 #"\"not implemented object yet\""
0 0 22 3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-true"
0 0 22 3 3 #") ("
0 0 15 3 11 #"make-object"
0 0 22 3 2 #" ("
0 0 14 3 5 #"VTrue"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-false"
0 0 22 3 3 #") ("
0 0 15 3 11 #"make-object"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VFalse"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-none"
0 0 22 3 3 #") ("
0 0 15 3 11 #"make-object"
0 0 22 3 2 #" ("
0 0 14 3 5 #"VNone"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"make-str"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 3 #") ("
0 0 15 3 11 #"make-object"
0 0 22 3 2 #" ("
0 0 14 3 4 #"VStr"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"make-num"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 3 #") ("
0 0 15 3 11 #"make-object"
0 0 22 3 2 #" ("
0 0 14 3 4 #"VNum"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-bool"
0 0 22 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 3 #") ("
0 0 15 3 11 #"make-object"
0 0 22 3 2 #" ("
0 0 14 3 2 #"if"
0 0 22 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #" ("
0 0 14 3 5 #"VTrue"
0 0 22 3 3 #") ("
0 0 14 3 6 #"VFalse"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 14 #"make-exception"
0 0 22 3 1 #" "
0 0 14 3 7 #"message"
0 0 22 3 3 #") ("
0 0 14 3 20 #"make-object-of-class"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"Exception"
0 0 22 3 2 #" ("
0 0 14 3 4 #"VStr"
0 0 22 3 1 #" "
0 0 14 3 7 #"message"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 5 #"CFunc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"right"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 14 3 6 #"CPrim2"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"right"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"values"
0 0 22 3 2 #" ("
0 0 14 3 5 #"Local"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 3 #") ("
0 0 14 3 6 #"values"
0 0 22 3 2 #" ("
0 0 14 3 5 #"Local"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 5 #"right"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 15 #"make-prim1-func"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 5 #"CFunc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 14 3 6 #"CPrim1"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"values"
0 0 22 3 2 #" ("
0 0 14 3 5 #"Local"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-class"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 7 #"CObject"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VClass"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"type\""
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                       "
0 0 17 3 3 #";;("
0 0 17 3 6 #"values"
0 0 17 3 1 #" "
0 0 17 3 11 #"\"__class__\""
0 0 17 3 2 #" ("
0 0 17 3 74
(
 #"make-none))  ;; taken out to avoid circular loop, should probably be"
 #" fixed"
) 0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ("
0 0 14 3 15 #"make-prim1-func"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"__str__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"to-str"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 19 3 13 #"\"__setattr__\""
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 14 3 5 #"CFunc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"val"
0 0 22 3 3 #") ("
0 0 14 3 9 #"CSetField"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 62
#"                                                             ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 62
#"                                                             ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"id"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 62
#"                                                             ("
0 0 14 3 3 #"CId"
0 0 20 3 1 #"'"
0 0 14 3 3 #"val"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 39 #"                                      ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"values"
0 0 22 3 2 #" ("
0 0 14 3 5 #"Local"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 3 #") ("
0 0 14 3 6 #"values"
0 0 22 3 2 #" ("
0 0 14 3 5 #"Local"
0 0 22 3 1 #")"
0 0 20 3 1 #"'"
0 0 14 3 2 #"id"
0 0 22 3 3 #") ("
0 0 14 3 6 #"values"
0 0 22 3 2 #" ("
0 0 14 3 5 #"Local"
0 0 22 3 1 #")"
0 0 20 3 1 #"'"
0 0 14 3 3 #"val"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 19 3 13 #"\"__getattr__\""
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 14 3 5 #"CFunc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"id"
0 0 22 3 3 #") ("
0 0 14 3 9 #"CGetField"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 57 #"                                                        ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 57 #"                                                        ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"id"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 39 #"                                      ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"values"
0 0 22 3 2 #" ("
0 0 14 3 5 #"Local"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 3 #") ("
0 0 14 3 6 #"values"
0 0 22 3 2 #" ("
0 0 14 3 5 #"Local"
0 0 22 3 1 #")"
0 0 20 3 1 #"'"
0 0 14 3 2 #"id"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                       "
0 7         793 4           0 0           0 131 0 22 3 1 #"("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"__and__\""
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 14 3 5 #"CFunc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"id"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 39 #"                                      ("
0 0 14 3 3 #"CIf"
0 0 22 3 2 #" ("
0 0 14 3 6 #"CPrim1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"truthy"
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 6 #"CPrim1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"truthy"
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 10 #"make-false"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                       "
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__or__\""
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 14 3 5 #"CFunc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"id"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 39 #"                                      ("
0 0 14 3 3 #"CIf"
0 0 22 3 2 #" ("
0 0 14 3 6 #"CPrim1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"truthy"
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 9 #"make-true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 6 #"CPrim1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"truthy"
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"id"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"__not__\""
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 14 3 5 #"CFunc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 39 #"                                      ("
0 0 14 3 3 #"CIf"
0 0 22 3 2 #" ("
0 0 14 3 6 #"CPrim1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"truthy"
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 10 #"make-false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 9 #"make-true"
0 0 22 3 8 #"))))))))"
0           0 0 0 22 29 1 #"\n"
0 0 22 3 27 #"                       ))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"TODO"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"Exception"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"dict"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"tuple"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"list"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"float"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 93
(
 #"classes are callable. How to deal with this? primval of class be a p"
 #"air of name and callable?"
) 0 0 17 29 1 #"\n"
0 0 17 3 99
(
 #"or maybe but the function in __call__ in the class object, and look "
 #"for classes or closures in CApp"
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 10 #"none-class"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 7 #"CObject"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VClass"
0 0 22 3 1 #" "
0 0 19 3 10 #"\"NoneType\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 19 3 11 #"\"__class__\""
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"type"
0 0 22 3 6 #"))))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 9 #"str-class"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 7 #"CObject"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VClass"
0 0 22 3 1 #" "
0 0 19 3 5 #"\"str\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 19 3 11 #"\"__class__\""
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"type"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim1-func"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"__len__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"str-len"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"__add__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"str-add"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"__mul__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"str-mul"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__le__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"str-le"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__lt__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"str-lt"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__ge__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"str-ge"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__gt__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"str-gt"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__eq__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"str-eq"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__is__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"str-eq"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__ne__\""
0 0 22 29 1 #"\n"
0 0 22 3 37 #"                                    ("
0 0 14 3 5 #"CFunc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"right"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 3 #"CIf"
0 0 22 3 2 #" ("
0 0 14 3 6 #"CPrim2"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"str-eq"
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 3 #") ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"right"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 49 #"                                                ("
0 0 14 3 10 #"make-false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 49 #"                                                ("
0 0 14 3 9 #"make-true"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"values"
0 0 22 3 2 #" ("
0 0 14 3 5 #"Local"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 4 #"self"
0 0 22 3 3 #") ("
0 0 14 3 6 #"values"
0 0 22 3 2 #" ("
0 0 14 3 5 #"Local"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 5 #"right"
0 0 22 3 8 #"))))))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 9 #"int-class"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 7 #"CObject"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VClass"
0 0 22 3 1 #" "
0 0 19 3 5 #"\"int\""
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 19 3 11 #"\"__class__\""
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"type"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"__add__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"int-add"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"__sub__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"int-sub"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"__mul__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"int-mul"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"__div__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"int-div"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 14 #"\"__floordiv__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 12 #"int-floordiv"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"__mod__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"int-mod"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__le__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"int-le"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__lt__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"int-lt"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__ge__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"int-ge"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__gt__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"int-gt"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__eq__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"int-eq"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__is__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"int-eq"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 15 #"make-prim2-func"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"__ne__\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"int-ne"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 10 #"bool-class"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 7 #"CObject"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VClass"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"bool\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 19 3 11 #"\"__class__\""
0 0 22 3 2 #" ("
0 0 14 3 3 #"CId"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"int"
0 0 22 3 6 #"))))))"
0 0 22 29 1 #"\n"
0           0
